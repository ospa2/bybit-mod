// ==== –û—Å–Ω–æ–≤–Ω–æ–π –≤–æ—Ç—á–µ—Ä ====

import type { Card } from "../../features/buy/automation/adFinder";
import { handleOrderCompletion } from "./orderCompletionHandler";
import { getOrderStatus } from "./orderStatusChecker";

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const CHECK_INTERVAL = 5000; // 5 —Å–µ–∫—É–Ω–¥
const MAX_ATTEMPTS = 360; // 30 –º–∏–Ω—É—Ç



// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –æ—Ä–¥–µ—Ä–æ–º
export function watchOrder(orderId: string, card: Card): () => void {
   let attemptCount = 0;
   let consecutiveErrors = 0;
   const MAX_CONSECUTIVE_ERRORS = 5;

   const interval = setInterval(async () => {
      try {
         // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞
         if (attemptCount++ >= MAX_ATTEMPTS) {
            console.error(`‚è±Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –æ—Ä–¥–µ—Ä–∞ ${orderId}`);
            clearInterval(interval);
            return;
         }

         // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
         const status = await getOrderStatus(orderId);
         console.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ä–¥–µ—Ä–∞ ${orderId}: ${status} (–ø–æ–ø—ã—Ç–∫–∞ ${attemptCount}/${MAX_ATTEMPTS})`);

         // –°–±—Ä–æ—Å —Å—á—ë—Ç—á–∏–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ
         consecutiveErrors = 0;

         // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
         if (status === "completed" || status === "cancelled") {
            clearInterval(interval);
            await handleOrderCompletion(orderId, card, status);
         }
      } catch (error) {
         consecutiveErrors++;
         console.error(
            `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ä–¥–µ—Ä–∞ ${orderId} (${consecutiveErrors}/${MAX_CONSECUTIVE_ERRORS}):`,
            error
         );

         // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ—Å–ª–µ —Å–µ—Ä–∏–∏ –æ—à–∏–±–æ–∫
         if (consecutiveErrors >= MAX_CONSECUTIVE_ERRORS) {
            console.error(`üõë –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –æ—à–∏–±–æ–∫ –ø–æ–¥—Ä—è–¥ –¥–ª—è –æ—Ä–¥–µ—Ä–∞ ${orderId}. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è.`);
            clearInterval(interval);
         }
      }
   }, CHECK_INTERVAL);

   // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä—É—á–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
   return () => {
      console.log(`üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –æ—Ä–¥–µ—Ä–æ–º ${orderId}`);
      clearInterval(interval);
   };
}