export function filterRemark(description) {
    let filteredText = description;

    // 1. –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–∞–∂–¥—É—é —Å—Ç–æ–ø-—Ñ—Ä–∞–∑—É –≤ HTML-—Ç–µ–≥ <strong>
    stopPhrases.forEach(phrase => {
        // –°–æ–∑–¥–∞–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ—Ä–∞–∑—ã –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞ –∏ –ø–æ –≤—Å–µ–º—É —Ç–µ–∫—Å—Ç—É
        const regex = new RegExp(phrase.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&'), 'gi');
        // –ó–∞–º–µ–Ω—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—É—é —Ñ—Ä–∞–∑—É –Ω–∞ —Ç—É –∂–µ —Ñ—Ä–∞–∑—É, –æ–±–µ—Ä–Ω—É—Ç—É—é –≤ <strong>
        filteredText = filteredText.replace(regex, '');
    });

    // 2. –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã –∏ —ç–º–æ–¥–∑–∏
    filteredText = filteredText.replace(/[‚úÖüìå‚ùåüîíüéØ‚Äî]/g, '');

    // 3. –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤, —Ç–æ—á–µ–∫ –∏ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫
    filteredText = filteredText
        .replace(/\s+/g, ' ')
        .replace(/\s+\./g, '.')
        .replace(/\s+,/g, ',')
        .replace(/\.{2,}/g, '.')
        .trim();

    return filteredText;
}